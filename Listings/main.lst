C251 COMPILER V5.60.0,  main                                                               18/07/25  14:57:38  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE Src\main.c XSMALL BROWSE INCDIR(.\Libraries\libraries;.\Libraries\seek
                    -free_components;.\Libraries\seekfree_libraries;.\Libraries\seekfree_peripheral;.\Inc) DEBUG PRINT(.\Listings\main.lst) T
                    -ABS(2) OBJECT(.\Objects\main.obj) 

stmt  level    source

    1          #include "main.h"
    2          
    3          #include "Libraries/seekfree_peripheral/headfile.h"
    4          #include "fan.h"
    5          #include "hmc5883l.h"
    6          #include "imu.h"
    7          #include "pid.h"
    8          #include "task.h"
    9          
   10          #define KEY4_PIN P73
   11          #define BUZZER P67
   12          
   13          uint8 key4_status = 1;  // set default button status
   14          uint8 key4_previous_status;
   15          char buf[256];
   16          uint8 count = 0;
   17          uint8 test_i2c[3];
   18          
   19          void main() {
   20   1        board_init();  // init board
   21   1        iic_init(IIC_4, IIC4_SCL_P32, IIC4_SDA_P33, 10);
   22   1        uart_init(UART_2, UART2_RX_P10, UART2_TX_P11, 115200, TIM_2);
   23   1      
   24   1        BUZZER = 0;               // set default output for buzzer
   25   1        gpio_mode(P6_7, GPO_PP);  // set pin p6.7 as push pull mode for large current (>20mA), note all pin def
             -ault to be standard gpio
   26   1      
   27   1        // pwm_init(TEST_PWM, 50, 0);
   28   1        // pwm_duty(TEST_PWM, PWM_DUTY_MAX*0.05*2);
   29   1        initial_all_fan();
   30   1        // fan_set_speed(&test_fan, FAN_0_SPEED_PWM);
   31   1      
   32   1        imu660ra_init();
   33   1        imu660ra_cali();
   34   1      
   35   1        // test imu cali
   36   1        sprintf(buf, "acc_x_err: %.2f, acc_y_err: %.2f, acc_z_err: %.2f, gyro_x_err: %.2f, gyro_y_err: %.2f, gy
             -ro_z_err: %.2f\n",
   37   1                acc_x_err, acc_y_err, acc_z_err, gyro_x_err, gyro_y_err, gyro_z_err);
   38   1        uart_putbuff(UART_2, buf, strlen(buf));
   39   1      
   40   1        while (1) {
   41   2          // test gpio
   42   2          // key4_previous_status = key4_status;
   43   2          // key4_status = KEY4_PIN; // read button
   44   2      
   45   2          // if (key4_previous_status && !key4_status) // capured falling edge
   46   2          // {
   47   2          //   delay_ms(10); // debounce
   48   2          //   key4_status = KEY4_PIN;
   49   2      
   50   2          //   if (!key4_status)
   51   2          //   {
   52   2          //     BUZZER = !BUZZER; // turn on/off the buzzer
   53   2          //   }
   54   2          // }
   55   2      
C251 COMPILER V5.60.0,  main                                                               18/07/25  14:57:38  PAGE 2   

   56   2          // test i2c and hmc reading
   57   2          iic_read_reg_bytes(HMC5883L_ADDR, HMC5883L_REG_ADDR_IDA, test_i2c, 3);
   58   2          sprintf(buf, "HMC5883L ID: %02X%02X%02X\n", test_i2c[0], test_i2c[1], test_i2c[2]);
   59   2          uart_putbuff(UART_2, buf, strlen(buf));
   60   2          // 0x48 0x34 0x33
   61   2      
   62   2          // test imu reading
   63   2          // sprintf(buf, "acc_x: %.2f g, acc_y: %.2f g, acc_z: %.2f g, gyro_x: %.2f °/s, gyro_y: %.2f °/s, g
             -yro_z: %.2f °/s\n",
   64   2          //     imu_data.x_acc, imu_data.y_acc, imu_data.z_acc, imu_data.x_gyro, imu_data.y_gyro, imu_data.z_g
             -yro);
   65   2          // uart_putbuff(UART_2, buf, strlen(buf));
   66   2      
   67   2          // test pid control
   68   2          delay_ms(1000);
   69   2        }
   70   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       259     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       262     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       142     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
